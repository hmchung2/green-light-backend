generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model User {
  id             Int       @id @default(autoincrement())
  username       String    @unique
  sex            String
  interestingSex String?
  interestingAge Int?
  instaUsername  String?   @unique
  password       String
  email          String?   @unique
  birthDay       DateTime
  phoneNo        String?   @unique
  avatar         String?
  followers      User[]    @relation("FollowRelation")
  following      User[]    @relation("FollowRelation")
  photos         Photo[]
  introduction   String?
  location       Location?
  Message        Message[]
  rooms          Room[]
  Freeze         Freeze[]
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  userType       String
  userStatus     String
  Alarm          Alarm[]
  description    String?
}

model Location {
  userId Int    @unique
  lat    Float?
  lon    Float?
  user   User   @relation(fields: [userId], references: [id])
}

model Photo {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  file      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Message {
  id        Int      @id @default(autoincrement())
  payload   String
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  room      Room     @relation(fields: [roomId], references: [id])
  roomId    Int
  read      Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Alarm {
  id        Int      @id @default(autoincrement())
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  read      Boolean  @default(false)
  seen      Boolean  @default(false)
  msg       String
  detail    String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Freeze {
  id           Int      @id @default(autoincrement())
  freezerId    Int
  freezedUsers User[]
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model Room {
  id        Int       @id @default(autoincrement())
  users     User[]
  messages  Message[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}
